:host{
  height: 100%;
  width: 100%;

  display: grid;
  grid-template-columns: auto;
  grid-template-rows: max-content max-content auto max-content;
  grid-template-areas:
    "header"
    "navbar"
    "content"
    "footer";
  // define mobile layout first, then add media queries for the rest
  // https://gridbyexample.com/examples/example13/

}

app-header {
  grid-area: header;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  padding: 0px 204px;
  position:fixed; top:0px; left:0px; right:0px;
  z-index: 1;
  width: 100%;
  
}

app-navbar {
  grid-area: navbar;
  position: fixed;
  z-index: 0;
  top: 0;
  left: 0;
  width:215px;
  padding-top:80px;
}

app-sidebar {
  grid-area: sidebar;
}

router-outlet {
  display: none; // Fix router outlet from influencing the grid
}

// Attempt at setting an attribute for the injected component
[content] {
  grid-area: content;
  background: greenyellow;
}

// Attempt at selecting the injected component (the subsequent sibling of the router)
router-outlet + * {
  grid-area: content;
  background: greenyellow; /* DEBUG: CSS is applied as expected if the background changes */
}

// Attempt at selecting a dynamically injected component
app-about {
  background: greenyellow; /* DEBUG: CSS is applied as expected if the background changes */
}

app-footer {
  grid-area: footer;
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100%;
  z-index: 1;
}


//Content 
.twoColumns {
  display: flex;
  width: 100%;
  height: 100%;
}
.leftColumn  {
  width: 216px;
  box-shadow: 5px 0 5px -5px rgb(221, 216, 216);
  text-align: center;
  min-height: 626px;
}
.rightColumn  {
  padding-left: 24px;
  flex: 1;
  margin-top: 80px;
  margin-bottom: 60px;
}
body {    
  margin: 0 !important;
  padding: 0 !important;
}